// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using carteiraAcoes.Entity;

namespace carteiraAcoes.Migrations
{
    [DbContext(typeof(BancoContext))]
    [Migration("20200826191609_valorCompraeVenda")]
    partial class valorCompraeVenda
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("carteiraAcoes.Models.Acao", b =>
                {
                    b.Property<int>("AcaoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Codigo")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Descricao")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int>("Numero")
                        .HasColumnType("int");

                    b.Property<decimal>("ValorCompra")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal>("ValorVenda")
                        .HasColumnType("decimal(65,30)");

                    b.HasKey("AcaoId");

                    b.ToTable("acao");
                });

            modelBuilder.Entity("carteiraAcoes.Models.MovimentoAcao", b =>
                {
                    b.Property<int>("MovimentoAcaoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("AcaoId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DataCompra")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("DataVenda")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("Quantidade")
                        .HasColumnType("int");

                    b.Property<decimal>("ValorCompra")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal>("ValorVenda")
                        .HasColumnType("decimal(65,30)");

                    b.Property<bool>("Vendido")
                        .HasColumnType("tinyint(1)");

                    b.HasKey("MovimentoAcaoId");

                    b.HasIndex("AcaoId");

                    b.ToTable("movimentoAcao");
                });

            modelBuilder.Entity("carteiraAcoes.Models.MovimentoOpcao", b =>
                {
                    b.Property<int>("MovimentoOpcaoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime?>("DataVencimento")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DataVenda")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("MovimentoAcaoId")
                        .HasColumnType("int");

                    b.Property<int>("OpcaoId")
                        .HasColumnType("int");

                    b.Property<int>("Quantidade")
                        .HasColumnType("int");

                    b.Property<decimal>("ValorPremio")
                        .HasColumnType("decimal(65,30)");

                    b.Property<bool>("exerceu")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("finalizado")
                        .HasColumnType("tinyint(1)");

                    b.HasKey("MovimentoOpcaoId");

                    b.HasIndex("OpcaoId");

                    b.ToTable("movimentoOpcao");
                });

            modelBuilder.Entity("carteiraAcoes.Models.Opcao", b =>
                {
                    b.Property<int>("OpcaoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("AcaoId")
                        .HasColumnType("int");

                    b.Property<string>("Descricao")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int>("SerieId")
                        .HasColumnType("int");

                    b.Property<decimal>("ValorCompra")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal>("ValorStrike")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal>("ValorVenda")
                        .HasColumnType("decimal(65,30)");

                    b.HasKey("OpcaoId");

                    b.HasIndex("AcaoId");

                    b.HasIndex("SerieId");

                    b.ToTable("opcao");
                });

            modelBuilder.Entity("carteiraAcoes.Models.Serie", b =>
                {
                    b.Property<int>("SerieId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Descricao")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int>("Mes")
                        .HasColumnType("int");

                    b.HasKey("SerieId");

                    b.ToTable("serie");
                });

            modelBuilder.Entity("carteiraAcoes.Models.MovimentoAcao", b =>
                {
                    b.HasOne("carteiraAcoes.Models.Acao", "Acao")
                        .WithMany()
                        .HasForeignKey("AcaoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("carteiraAcoes.Models.MovimentoOpcao", b =>
                {
                    b.HasOne("carteiraAcoes.Models.Opcao", "Opcao")
                        .WithMany()
                        .HasForeignKey("OpcaoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("carteiraAcoes.Models.Opcao", b =>
                {
                    b.HasOne("carteiraAcoes.Models.Acao", "acao")
                        .WithMany()
                        .HasForeignKey("AcaoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("carteiraAcoes.Models.Serie", "serie")
                        .WithMany()
                        .HasForeignKey("SerieId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
